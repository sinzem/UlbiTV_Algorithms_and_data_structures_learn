const tree = [
    {
        v: 5,
        c: [
            {
                v: 10,
                c: [
                    {
                        v: 11,
                    }
                ]
            },
            {
                v: 17,
                c: [
                    {
                        v: 5,
                        c: [
                            {
                                v: 1,
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        v: 5,
        c: [
            {
                v: 10,
            },
            {
                v: 15,
            }
        ]
    }
];
 /* (массив для демонстрации обхода дерева, значения обозначены как v(value), дочерние - как c(children)) */

 /* (обход с помощью рекурсии) */
const recursive = (tree) => {
    let sum = 0;
    tree.forEach(node => { /* (обходим элементы массива) */
        sum += node.v; /* (если попалось значение, добавляем к сумме) */
        if (!node.c) { /* (если дочерних элементов нет, возвращаем значение) */
            return node.v;
        }
        sum += recursive(node.c); /* (если дочерний элемент, вызываем на нем эту же функцию, значение, которое вернулось, добавляем к сумме) */
    })
    return sum;
}

console.log(recursive(tree));


/* (обход без рекурсии) */
const iteration = (tree) => {
    if (!tree.length) { /* (проверка на пустой массив) */
        return 0;
    }
    let sum = 0;
    let stack = []; /* (массив для элементов дерева) */
    tree.forEach(node => stack.push(node)); /* (перебираем дерево, добавляем его элементы в массив(работаем со стеком - добавляем новые элементы в конец массива, при обработке удаляем тоже с конца)) */
    while (stack.length) { /* (запускаем цикл, пока у массива элементов есть длинна, получаем/удаляем последний элемент, если он содержит значение - добавляем к сумме, если содержит дочерний элемент - перебираем и добавляем его обратно в массив) */
        const node = stack.pop();
        sum += node.v;
        if (node.c) {
            node.c.forEach(child => stack.push(child));
        }
    }
    return sum;
}

console.log(iteration(tree));